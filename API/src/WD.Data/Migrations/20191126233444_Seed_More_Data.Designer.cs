// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WD.Data;

namespace WD.Data.Migrations
{
    [DbContext(typeof(WdDbContext))]
    [Migration("20191126233444_Seed_More_Data")]
    partial class Seed_More_Data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WD.Data.Entities.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("adfffa73-931e-4d9a-a8ff-2c81b5f14bc8"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Test name",
                            TrainingId = new Guid("6e03b328-c3ae-41f8-a33e-9c56ed5964b7"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("09216d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Test name",
                            TrainingId = new Guid("6e03b328-c3ae-41f8-a33e-9c56ed5964b7"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("09216d1f-f8d9-4a87-a0b3-49224ade77b3"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Test name",
                            TrainingId = new Guid("6e03b328-c3ae-41f8-a33e-9c56ed5964b7"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("437e855a-5daf-4114-8215-753bee4591f1"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Test name",
                            TrainingId = new Guid("1e3f3264-f4ee-481a-bcb0-0aaa78a30d46"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("09416d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Test name",
                            TrainingId = new Guid("1e3f3264-f4ee-481a-bcb0-0aaa78a30d46"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("76dc09f3-3b13-4e6a-ba89-d8eefafc9899"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Test name",
                            TrainingId = new Guid("c1370344-1e97-45ce-983d-6d56039d2869"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("77987c9d-090d-4403-b384-d202f2cd205e"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Test name",
                            TrainingId = new Guid("c1370344-1e97-45ce-983d-6d56039d2869"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("WD.Data.Entities.ExerciseLoop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Repeats")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseLoops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee960fd4-ea2c-41a1-939d-4a2804fd584d"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("adfffa73-931e-4d9a-a8ff-2c81b5f14bc8"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("710d6b69-2031-40cb-b945-6324edb9ecf7"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("adfffa73-931e-4d9a-a8ff-2c81b5f14bc8"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("bc4f3d1b-f667-413a-ab8e-5afa752468ee"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("adfffa73-931e-4d9a-a8ff-2c81b5f14bc8"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("4eb17c7d-4e2f-45c9-9cff-e6fdd028e95a"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("adfffa73-931e-4d9a-a8ff-2c81b5f14bc8"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("dd2f825f-7cec-4c0a-a3f4-67fc217a609c"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("adfffa73-931e-4d9a-a8ff-2c81b5f14bc8"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("523e640b-634c-4ec6-9308-7f77a36eb06b"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("adfffa73-931e-4d9a-a8ff-2c81b5f14bc8"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("72595bd4-55c2-4dad-9ba4-3d884f3514e6"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09216d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("5295eccd-abd0-49a0-a451-3fc5c367903e"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09216d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("63950351-628f-4a19-a51f-276186d56411"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09216d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("72595bd4-55c2-4dad-9ba4-1d884f3514e6"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09216d1f-f8d9-4a87-a0b3-49224ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("5295eccd-abd0-49a0-a451-2fc5c367903e"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09216d1f-f8d9-4a87-a0b3-49224ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("63950351-628f-4a19-a51f-376186d56411"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09216d1f-f8d9-4a87-a0b3-49224ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("9a2f60ea-a051-403a-854f-5ffa4029dc1d"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("437e855a-5daf-4114-8215-753bee4591f1"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("334ac162-6b25-40c7-a8e1-bdb682081077"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("437e855a-5daf-4114-8215-753bee4591f1"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("c0717ff7-85f8-44fb-8f75-b3f30046ada3"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("437e855a-5daf-4114-8215-753bee4591f1"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("6efc49ab-74cb-4b2c-84d4-8e18ca50787d"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("437e855a-5daf-4114-8215-753bee4591f1"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("f1d9cad4-ba78-43e9-8d86-5d6a7900c55a"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("437e855a-5daf-4114-8215-753bee4591f1"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("393daabc-47b3-4c8b-86e2-7a0c11140223"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("437e855a-5daf-4114-8215-753bee4591f1"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("74595bd4-55c2-4dad-9ba4-3d884f3514e6"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09416d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("5195eccd-abd0-49a0-a451-3fc5c367903e"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09416d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("62950351-628f-4a19-a51f-276186d56411"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("09416d1f-f8d9-4a87-a0b3-49254ade77b3"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("194df448-0cb2-4ca0-9023-ce5e65b235e8"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("76dc09f3-3b13-4e6a-ba89-d8eefafc9899"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("e5d07022-a17f-424a-b4e8-84c5dd32b76b"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("76dc09f3-3b13-4e6a-ba89-d8eefafc9899"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("d606b989-afa2-43d1-aebb-d17ce2834107"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("76dc09f3-3b13-4e6a-ba89-d8eefafc9899"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("09b2de47-2bfb-41d3-845b-48fecf06f8c7"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("77987c9d-090d-4403-b384-d202f2cd205e"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("6a3be7ec-5e05-41d7-bdef-575abd3b9d76"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("77987c9d-090d-4403-b384-d202f2cd205e"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("10df8645-19fc-4ada-825c-7ad4b429c4ff"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ExerciseId = new Guid("77987c9d-090d-4403-b384-d202f2cd205e"),
                            Repeats = 8,
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Weight = 12
                        });
                });

            modelBuilder.Entity("WD.Data.Entities.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e03b328-c3ae-41f8-a33e-9c56ed5964b7"),
                            CreatedDate = new DateTimeOffset(new DateTime(2019, 5, 23, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("1e3f3264-f4ee-481a-bcb0-0aaa78a30d46"),
                            CreatedDate = new DateTimeOffset(new DateTime(2019, 5, 23, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("c1370344-1e97-45ce-983d-6d56039d2869"),
                            CreatedDate = new DateTimeOffset(new DateTime(2019, 5, 23, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("WD.Data.Entities.Exercise", b =>
                {
                    b.HasOne("WD.Data.Entities.Training", "Training")
                        .WithMany("Exercises")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WD.Data.Entities.ExerciseLoop", b =>
                {
                    b.HasOne("WD.Data.Entities.Exercise", "Exercise")
                        .WithMany("Loops")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
